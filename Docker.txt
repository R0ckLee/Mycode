Docker:
优点
操作系统级别的虚拟化 不消耗资源
容器：共用宿主机内核，容器的第一个进程直接运行服务，轻量级，损耗少，启动快，性能高

单项目打包 
整个项目打包    > 减少部署麻烦

环境的一致性

持续集成 迭代

微服务 一个容器一个服务 相互隔离 

弹性伸缩 快速扩容 集群管理解决方案 k8s

容器可比喻为镜像上面添加了读写层
容器共享linux内核
容器运行在宿主机系统的一个进程 开销小


Docker-file一些命令 docker-file是干什么的
	
	安装时先配置阿里的镜像源
		
	docker-file是用来构建docker镜像的构建文件 是有一系列命令和参数构成的脚本
	写docker-file —> bulid —> run 三步骤
	编写dockerfile
	然后docker build -f + 文件目录 -t + 新镜像名字 + ‘.’  ‘.’是Dokerfile 文件所在目录 也可以是绝对路径
	再docker run -itd + 镜像id或者名字:加版本 启动一个容器
	
	docker images查看生成的镜像
		
	docker ps 当前正在运行的容器 docker ps -q 查询当前运行容器的id docker ps -qa 查看所有的容器的id
	docker container rm +容器id 删除单个容器 -f 强制删除
	docker container rm `docker ps -qa`
	
	docker rmi # 删除镜像
	
	docker run -d -p 80:80 —-name nginx nginx:1.16 /bin/bash
	-d 后台运行 -p 端口映射 /bin/bash 覆盖容器的初始化命令 —-name 指定容器的名字
	docker run -it -p 7777:8080 tomcat
	-it 分配交互式的终端 
	
	docker container ls # 查看正在运行的容器 / docker ps
	docker container ls -a # 查看运行中和杀死的容器 / docker ps -a
	docker container stop +容器id / docker kill 容器id
	docker container start +容器id
	
	docker history + 镜像id 查看镜像的生成过程
	
	docker -v 添加容器卷
	
	docker exec -it + 镜像id + 执行的命令  # 在容器外面对某个容器执行命令并返回，常用这个
	进入一个容器 docker exec+ 镜像id 或 docker attach+镜像id（attach使用的是同一个终端，容易冲突）
	ctrl+p+q 临时退出容器并报出运行 ctrl+c退出并关闭容器
	
	docker restart + 镜像id 重启容器

	docker commit 将容器提交一个新的镜像
	将提交的镜像推送至阿里云 先注册开发者账号 并新建镜像仓库
	docker login —-username= 仓库地址
	docker tag + 镜像id + 仓库地址:[镜像版本号]
	docker push + 仓库地址/:[镜像版本号]

	格式：
	保留字指令：
	FROM 基础镜像的来源 原镜像 Base镜像（scrath 一切镜像的祖先类）
	MAINTAINER 作者和邮箱的一些信息
	RUN 容器构建时需要运行的命令
	EXPOSE 当前容器对外暴露的端口号
	WORKDIR 登陆容器的时候落脚点目录
	ENV 用来在构建容器过程中设置的环境变量
	ADD 将宿主机的文件拷贝文件并解压到镜像的指定目录
	COPY 类似ADD 拷贝文件到镜像中  COPY src dest 或 COPY [‘src’,’dest’]
	VOLUME 容器卷 用于保存数据和持久化工作
	CMD [‘/bin/bash’] (运行镜像的时候 以/bin/bash的环境运行) 指定一个容器启动时要运行的命令 Dockerfile 中可以指定多个CMD指令 但是只有最后一个生效 CMD会被docke run之后的参数替换
	ENTRYPOINT 指定一个容器启动时要运行的命令 ENTRYPOINT 不会被docker run之后参数替换而是追加
	ONBUILD 当构建一个继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发
	LABEL 功能是为镜像指定标签  说明:LABEL会继承基础镜像种的LABEL，如遇到key相同，则值覆盖


	
	docker search + 镜像名 查找一个镜像
	docker pull + 镜像名  下载拉取一个镜像默认不加:和版本号如（mysql:5.6）视为最新版
	
	docker save 保存导出镜像
	docker load 导入镜像
	load 和import都可以导入，但是import导入的镜像不带标签，所以都用load


	
	docker容器内的第一个进程（初始命令）必须一直处于前台运行的状态（必须夯住），否则这个容器，就会处于退出状态
	业务在容器中运行需要满足：夯住，启动服务
	
	基本知识：（1）每条保留字指令都必须为大写字母且后面要至少跟随一个参数
		（2）指令从上到下顺序执行
		（3）每条指令都会创建一个镜像层，并对镜像进行提交

	执行的大致流程：（1） docker从基础镜像运行一个容器
		     （2） 执行每一条指令并对容器进行修改
		     （3） 执行类似docker commit 的命令提交一个新的镜像层     ——>  最终形成一个镜像
		     （4） docker 在基于刚才提交的镜像运行一个新容器
		     （5） 执行dockerfile中的每一条指令到所有都完成




